FROM python:3.13-slim-bookworm as base

# Avoid prompts from apt
ENV DEBIAN_FRONTEND=noninteractive

# Configure mirror
ARG ENABLE_MIRROR=false
ENV PIP_INDEX_URL=${ENABLE_MIRROR:+https://mirrors.aliyun.com/pypi/simple}
RUN if [ "$ENABLE_MIRROR" = "true" ]; then \
    rm -rfv /etc/apt/sources.list.d/* && \
    echo "deb http://ftp.cn.debian.org/debian bookworm main contrib non-free non-free-firmware" > /etc/apt/sources.list && \
    echo "deb http://ftp.cn.debian.org/debian bookworm-updates main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb http://ftp.cn.debian.org/debian bookworm-backports main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb http://ftp.cn.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*; \
    fi

# Install dependencies
RUN apt-get update && apt-get install -y \
    git \
    xvfb \
    x11vnc \
    openbox \
    supervisor \
    novnc \
    websockify \
    procps \
    xdg-utils \
    python3-xdg \
    x11-xserver-utils \
    curl \
    tint2 \
    gdebi-core \
    --no-install-recommends

RUN curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - && \
    apt-get install -y nodejs

# Install noVNC
RUN git clone --depth 1 --branch v1.6.0 https://github.com/novnc/noVNC.git /usr/local/novnc \
    && git clone --depth 1 --branch v0.13.0 https://github.com/novnc/websockify /usr/local/novnc/utils/websockify

# Set up working directory
WORKDIR /app/view_server

# Install Playwright and browsers with dependencies
RUN npm install -g playwright@1.54.1
RUN playwright install chromium chrome --with-deps

# Install VSCode
RUN wget "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64" -O vscode.deb && \
    gdebi -n vscode.deb && \
    rm vscode.deb

RUN mkdir -p /tmp/.vscode/User && \
    echo '{' > /tmp/.vscode/User/settings.json && \
    echo '  "workbench.colorTheme": "Visual Studio Light",' >> /tmp/.vscode/User/settings.json && \
    echo '  "github.copilot.enabled": false,' >> /tmp/.vscode/User/settings.json && \
    echo '  "extensions.autoUpdate": false' >> /tmp/.vscode/User/settings.json && \
    echo '}' >> /tmp/.vscode/User/settings.json


# Set up supervisord configuration
COPY docker/resources/supervisord.conf /etc/supervisor/supervisord.conf

# Copy scripts
COPY docker/resources/start.sh start.sh
COPY docker/resources/x11-setup.sh x11-setup.sh

# Make scripts executable
RUN chmod +x start.sh x11-setup.sh

COPY docker/resources/openbox-rc.xml /root/.config/openbox/rc.xml
COPY docker/resources/tint2rc /root/.config/tint2/tint2rc

ENV PLAYWRIGHT_WS_PATH="default"
ENV PLAYWRIGHT_PORT=37367
ENV NO_VNC_PORT=5901

# Set the display environment variable
ENV DISPLAY=:0

# Screen resolution and DPI configuration
ENV SCREEN_WIDTH=1920
ENV SCREEN_HEIGHT=1536
ENV SCREEN_DPI=144

COPY docker/resources/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# MCP Server Container
FROM base

RUN pip install -U --break-system-packages uv

COPY mcp_server_proxy /app/mcp_server_proxy/

RUN cd /app/mcp_server_proxy && uv sync --python-preference=only-system

RUN apt-get install -y --no-install-recommends \
    wget \
    unzip \
    vim

WORKDIR /root/workspace

EXPOSE 8080

HEALTHCHECK --interval=10s --timeout=10s --start-period=10s --retries=12 \
    CMD curl -f http://localhost:8080/health || exit 1

CMD ["sh", "-c", "/app/view_server/start.sh && cd /app/mcp_server_proxy && uv run --no-sync -m mcp_server_proxy.main"]
