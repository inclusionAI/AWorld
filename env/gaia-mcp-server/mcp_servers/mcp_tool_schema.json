{
    "readweb-server": [
        {
            "name": "read_url",
            "title": null,
            "description": "提取并将网页内容转换为清晰、可读的markdown格式。非常适合阅读文章、文档、博客文章或任何网页内容。当您需要分析网站的文本内容、绕过付费墙或获取结构化数据时，请使用此工具。",
            "inputSchema": {
                "properties": {
                    "url": {
                        "description": "一个强大的网页内容提取工具，可以从指定URL检索和处理原始内容，非常适合数据收集、内容分析和研究任务。",
                        "title": "Url",
                        "type": "string"
                    },
                    "include_images": {
                        "default": false,
                        "description": "在响应中包含从URL提取的图片列表",
                        "title": "Include Images",
                        "type": "boolean"
                    }
                },
                "required": [
                    "url"
                ],
                "title": "read_urlArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "read_urlOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "browser-server": [
        {
            "name": "get_browser_capabilities",
            "title": null,
            "description": "\n    Get information about browser automation capabilities and configuration.\n    ",
            "inputSchema": {
                "properties": {},
                "title": "get_browser_capabilitiesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_browser_capabilitiesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "browser_use",
            "title": null,
            "description": "\n    Perform browser automation tasks using the browser-use package.\n\n        This tool provides comprehensive browser automation capabilities including:\n        - Web scraping and content extraction\n        - Form submission and automated interactions\n        - File downloads and media handling\n        - LLM-enhanced browsing with memory and vision\n        - Automatic handling of robot detection and paywalls\n    ",
            "inputSchema": {
                "properties": {
                    "task": {
                        "description": "The task to perform using the browser automation agent",
                        "title": "Task",
                        "type": "string"
                    },
                    "max_steps": {
                        "default": 50,
                        "description": "Maximum number of steps for browser execution",
                        "title": "Max Steps",
                        "type": "integer"
                    },
                    "extract_format": {
                        "default": "markdown",
                        "description": "Format for extracted content: 'markdown', 'json', or 'text'",
                        "title": "Extract Format",
                        "type": "string"
                    }
                },
                "required": [
                    "task"
                ],
                "title": "browser_useArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "browser_useOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "documents-csv-server": [
        {
            "name": "extract_csv_content",
            "title": null,
            "description": "\nExtract content from CSV documents using pandas.\n\n        This tool provides comprehensive CSV document content extraction with support for:\n        - CSV, TSV, and delimited text files\n        - Automatic encoding and delimiter detection\n        - Statistical analysis and data profiling\n        - Multiple output formats (Markdown)\n        - Optional data visualizations\n        - Memory-efficient processing for large files\n",
            "inputSchema": {
                "properties": {
                    "file_path": {
                        "description": "Path to the CSV document file to extract content from",
                        "title": "File Path",
                        "type": "string"
                    },
                    "output_format": {
                        "const": "markdown",
                        "default": "markdown",
                        "description": "Output format: 'markdown'",
                        "title": "Output Format",
                        "type": "string"
                    },
                    "max_rows": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "Maximum number of rows to read (None for all rows)",
                        "title": "Max Rows"
                    },
                    "include_statistics": {
                        "default": true,
                        "description": "Whether to include statistical summary in output",
                        "title": "Include Statistics",
                        "type": "boolean"
                    },
                    "generate_visualizations": {
                        "default": false,
                        "description": "Whether to generate and save data visualizations",
                        "title": "Generate Visualizations",
                        "type": "boolean"
                    },
                    "encoding": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "File encoding (auto-detected if None)",
                        "title": "Encoding"
                    },
                    "delimiter": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "CSV delimiter (auto-detected if None)",
                        "title": "Delimiter"
                    }
                },
                "required": [
                    "file_path"
                ],
                "title": "extract_csv_contentArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "extract_csv_contentOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "list_supported_formats",
            "title": null,
            "description": "\nList all supported CSV formats for extraction.\n",
            "inputSchema": {
                "properties": {},
                "title": "list_supported_formatsArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "list_supported_formatsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "documents-docx-server": [
        {
            "name": "extract_docx_content",
            "title": null,
            "description": "\nExtract content from DOCX/DOC documents using python-docx.\n\n        This tool provides comprehensive DOCX/DOC document content extraction with support for:\n        - DOCX and DOC files\n        - Text extraction with style preservation\n        - Table extraction and formatting\n        - Headers and footers extraction\n        - Embedded media extraction (images, audio, etc.)\n        - Multiple output formats (Markdown)\n        - Document structure analysis\n",
            "inputSchema": {
                "properties": {
                    "file_path": {
                        "description": "Path to the DOCX/DOC document file to extract content from",
                        "title": "File Path",
                        "type": "string"
                    },
                    "output_format": {
                        "const": "markdown",
                        "default": "markdown",
                        "description": "Output format: 'markdown'",
                        "title": "Output Format",
                        "type": "string"
                    },
                    "extract_images": {
                        "default": true,
                        "description": "Whether to extract and save embedded images and media",
                        "title": "Extract Images",
                        "type": "boolean"
                    },
                    "extract_tables": {
                        "default": true,
                        "description": "Whether to extract table content",
                        "title": "Extract Tables",
                        "type": "boolean"
                    },
                    "extract_headers_footers": {
                        "default": true,
                        "description": "Whether to extract headers and footers",
                        "title": "Extract Headers Footers",
                        "type": "boolean"
                    },
                    "include_structure": {
                        "default": true,
                        "description": "Whether to include document structure information in output",
                        "title": "Include Structure",
                        "type": "boolean"
                    }
                },
                "required": [
                    "file_path"
                ],
                "title": "extract_docx_contentArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "extract_docx_contentOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "list_supported_formats",
            "title": null,
            "description": "\nList all supported document formats for extraction.\n",
            "inputSchema": {
                "properties": {},
                "title": "list_supported_formatsArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "list_supported_formatsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "documents-pptx-server": [
        {
            "name": "extract_pptx_content",
            "title": null,
            "description": "\nExtract content from PPTX/PPT presentations using python-pptx.\n\n        This tool provides comprehensive PowerPoint presentation content extraction with support for:\n        - PPTX and PPT files\n        - Text extraction from slides, titles, and content\n        - Speaker notes extraction\n        - Image and media extraction\n        - Presentation structure analysis\n        - Multiple output formats (Markdown)\n        - LLM-optimized formatting\n",
            "inputSchema": {
                "properties": {
                    "file_path": {
                        "description": "Path to the PPTX/PPT presentation file to extract content from",
                        "title": "File Path",
                        "type": "string"
                    },
                    "output_format": {
                        "const": "markdown",
                        "default": "markdown",
                        "description": "Output format: 'markdown'",
                        "title": "Output Format",
                        "type": "string"
                    },
                    "extract_images": {
                        "default": true,
                        "description": "Whether to extract and save images from the presentation",
                        "title": "Extract Images",
                        "type": "boolean"
                    },
                    "extract_notes": {
                        "default": true,
                        "description": "Whether to extract speaker notes",
                        "title": "Extract Notes",
                        "type": "boolean"
                    },
                    "include_structure": {
                        "default": true,
                        "description": "Whether to include presentation structure information",
                        "title": "Include Structure",
                        "type": "boolean"
                    }
                },
                "required": [
                    "file_path"
                ],
                "title": "extract_pptx_contentArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "extract_pptx_contentOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "list_supported_formats",
            "title": null,
            "description": "\nList all supported presentation formats for extraction.\n",
            "inputSchema": {
                "properties": {},
                "title": "list_supported_formatsArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "list_supported_formatsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "documents-pdf-server": [
        {
            "name": "convert_document_to_markdown",
            "title": null,
            "description": "Convert PDF document to markdown foramt. ",
            "inputSchema": {
                "properties": {
                    "file_path": {
                        "description": "Path to the document file",
                        "title": "File Path",
                        "type": "string"
                    },
                    "paginate": {
                        "default": false,
                        "description": "Add page delimiters to the output",
                        "title": "Paginate",
                        "type": "boolean"
                    }
                },
                "required": [
                    "file_path"
                ],
                "title": "convert_document_to_markdownArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "convert_document_to_markdownOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "documents-txt-server": [
        {
            "name": "extract_text_content",
            "title": null,
            "description": "\nExtract content from text documents with encoding detection and analysis.\n\n        This tool provides comprehensive text document content extraction with support for:\n        - Various text file formats (TXT, MD, CSV, JSON, XML, source code, etc.)\n        - Automatic encoding detection with fallback options\n        - Content type detection and analysis\n        - Comprehensive text statistics\n        - LLM-optimized output formatting\n        - Binary file detection and handling\n",
            "inputSchema": {
                "properties": {
                    "file_path": {
                        "description": "Path to the text document file to extract content from",
                        "title": "File Path",
                        "type": "string"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown'",
                        "enum": [
                            "markdown",
                            "json",
                            "html",
                            "text"
                        ],
                        "title": "Output Format",
                        "type": "string"
                    },
                    "encoding": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "Specific encoding to use (None for auto-detection)",
                        "title": "Encoding"
                    },
                    "max_content_length": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "Maximum length of content to include in output (None for no limit)",
                        "title": "Max Content Length"
                    }
                },
                "required": [
                    "file_path"
                ],
                "title": "extract_text_contentArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "extract_text_contentOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "list_supported_formats",
            "title": null,
            "description": "\nList all supported text formats for extraction.\n",
            "inputSchema": {
                "properties": {},
                "title": "list_supported_formatsArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "list_supported_formatsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "download-server": [
        {
            "name": "download_file",
            "title": null,
            "description": "\nDownload a file from a URL with comprehensive options and controls.\n\n        This tool provides secure file download capabilities with:\n        - HTTP/HTTPS URL support\n        - Configurable timeout controls\n        - Path validation and directory creation\n        - File size limits and safety checks\n        - LLM-optimized result formatting\n",
            "inputSchema": {
                "properties": {
                    "url": {
                        "description": "HTTP/HTTPS URL of the file to download",
                        "title": "Url",
                        "type": "string"
                    },
                    "output_file_path": {
                        "description": "Local path where the file should be saved (absolute or relative to workspace)",
                        "title": "Output File Path",
                        "type": "string"
                    },
                    "overwrite": {
                        "default": false,
                        "description": "Whether to overwrite existing files (default: False)",
                        "title": "Overwrite",
                        "type": "boolean"
                    },
                    "timeout": {
                        "default": 60,
                        "description": "Download timeout in seconds (default: 60)",
                        "title": "Timeout",
                        "type": "integer"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "output_file_path"
                ],
                "title": "download_fileArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "download_fileOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_download_capabilities",
            "title": null,
            "description": "\nGet information about download service capabilities and configuration.",
            "inputSchema": {
                "properties": {},
                "title": "get_download_capabilitiesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_download_capabilitiesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "intelligence-code-server": [
        {
            "name": "generate_python_code",
            "title": null,
            "description": "\nGenerate executable Python code snippets based on task description.\n\n        This tool provides comprehensive code generation capabilities for:\n        - Solve simple math tasks and validations\n        - Data processing and analysis tasks\n        - Algorithm implementations and optimizations\n        - Utility functions and helper scripts\n        - Problem-solving code snippets\n        - Educational programming examples\n        - API integrations and automation scripts\n\n        Strengths:\n        - Generates clean, executable Python code\n        - Follows modern Python best practices (>=3.11)\n        - Includes proper error handling\n        - Supports various coding styles and complexity levels\n\n        Limitations:\n        - Cannot execute or test the generated code\n        - May require manual adjustments for specific environments\n        - Limited to Python programming language\n",
            "inputSchema": {
                "properties": {
                    "task_description": {
                        "description": "Description of the programming task or problem to solve",
                        "title": "Task Description",
                        "type": "string"
                    },
                    "requirements": {
                        "default": "",
                        "description": "Specific requirements, constraints, or specifications for the code",
                        "title": "Requirements",
                        "type": "string"
                    },
                    "context": {
                        "default": "",
                        "description": "Additional context or background information",
                        "title": "Context",
                        "type": "string"
                    },
                    "temperature": {
                        "default": 0.1,
                        "description": "Model temperature for code generation (0.0-1.0, lower = more deterministic)",
                        "maximum": 1.0,
                        "minimum": 0.0,
                        "title": "Temperature",
                        "type": "number"
                    },
                    "code_style": {
                        "default": "documented",
                        "description": "Style of generated code: minimal (concise), documented (with comments), verbose (detailed)",
                        "enum": [
                            "minimal",
                            "documented",
                            "verbose"
                        ],
                        "title": "Code Style",
                        "type": "string"
                    },
                    "save_to_file_path": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "Optional. Path to save the generated Python snippet. e.g., 'output/generated_script.py'",
                        "title": "Save To File Path"
                    }
                },
                "required": [
                    "task_description"
                ],
                "title": "generate_python_codeArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "generate_python_codeOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_reasoning_capabilities",
            "title": null,
            "description": "\nGet information about the reasoning service capabilities.\n",
            "inputSchema": {
                "properties": {},
                "title": "get_reasoning_capabilitiesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_reasoning_capabilitiesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "intelligence-think-server": [
        {
            "name": "complex_problem_reasoning",
            "title": null,
            "description": "\nhis tool provides comprehensive reasoning capabilities for:\n        - Mathematical problems and proofs\n        - Programming and algorithm challenges\n        - Logic puzzles, brain teasers, and fun riddles\n        - Competition-level STEM problems\n        - Multi-step analytical reasoning tasks\n\n        Weakness:\n        - Inability to process media types: image, audio, or video\n        - Require precise description of problem context and settings\n",
            "inputSchema": {
                "properties": {
                    "question": {
                        "description": "The input question for complex problem reasoning, such as math and code contest problems",
                        "title": "Question",
                        "type": "string"
                    },
                    "original_task": {
                        "default": "",
                        "description": "The original task description.",
                        "title": "Original Task",
                        "type": "string"
                    },
                    "temperature": {
                        "default": 0.3,
                        "description": "Model temperature for response variability (0.0-1.0)",
                        "maximum": 1.0,
                        "minimum": 0.0,
                        "title": "Temperature",
                        "type": "number"
                    },
                    "reasoning_style": {
                        "default": "detailed",
                        "description": "Style of reasoning output: detailed(analysis), concise(summary), or step-by-step(breakdown)",
                        "enum": [
                            "detailed",
                            "concise",
                            "step-by-step"
                        ],
                        "title": "Reasoning Style",
                        "type": "string"
                    }
                },
                "required": [
                    "question"
                ],
                "title": "complex_problem_reasoningArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "complex_problem_reasoningOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_reasoning_capabilities",
            "title": null,
            "description": "\nGet information about the reasoning service capabilities.\n",
            "inputSchema": {
                "properties": {},
                "title": "get_reasoning_capabilitiesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_reasoning_capabilitiesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "intelligence-guard-server": [
        {
            "name": "guarding_reasoning_process",
            "title": null,
            "description": "\nThis tool provides advanced logic diagonsing and correcting ability, to improve the quality of the reasoning process that already exists in the current context, while solving the complex question:\n        - Identify potential loopholes or oversights in the current reasoning process while solving the complex problem. \n        - Providing the guidance, suggestions to the reasoning process, to correct the loopholes or oversights if identified in this shot.\n\n        Invoke Timing: During Thinking Process Reviewing, while diagnosing the reasoning process in the context or give valuable suggestions in advance, this tool is a reliable selection.\n\n        Strengths:\n        - Be relatively sensitive to common logical traps in some mathematics or logic problems.\n\n        Weakness:\n        - Inability to process media types: image, audio, or video.\n        - Inability to check the correctness of the retrieved information from the internet.\n        - Require precise description of problem context and settings, including the reasoning process, retrieved data and the complex task itself.\n\n",
            "inputSchema": {
                "properties": {
                    "question": {
                        "description": "The input question for diagnosing the completeness/correctness of the reasoning process.\nFor example: based on the staged/phased information/data concluded as 1.xxxx 2. xxxx 3. xxxx...., is there any faults in the current reasoning process aaaaaathat should be corrected? Or is there any loopholes or oversights that should be emphized in advance, towards solving the bbbbb problem?\nRequirement: This input question should include a clear question with the necessary details/data/clues from the previous context(such as the key information/data retrieved from the internet), to present more clues to help the diagnosing process.The more exact details/data contained in this input question, the better the diagnosing result will be.",
                        "title": "Question",
                        "type": "string"
                    },
                    "original_task": {
                        "default": "",
                        "description": "The original task. This field is required and cannot be simplied, has to be true to the original task.",
                        "title": "Original Task",
                        "type": "string"
                    },
                    "temperature": {
                        "default": 0.1,
                        "description": "Model temperature for response variability (0.0-1.0)",
                        "maximum": 1.0,
                        "minimum": 0.0,
                        "title": "Temperature",
                        "type": "number"
                    },
                    "guarding_style": {
                        "default": "detailed",
                        "description": "Style of guarding output: detailed(analysis), concise(summary), or step-by-step(breakdown)",
                        "enum": [
                            "detailed",
                            "concise",
                            "step-by-step"
                        ],
                        "title": "Guarding Style",
                        "type": "string"
                    }
                },
                "required": [
                    "question"
                ],
                "title": "guarding_reasoning_processArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "guarding_reasoning_processOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_guarding_capabilities",
            "title": null,
            "description": "\nGet information about the guarding reasoning process service capabilities.\n",
            "inputSchema": {
                "properties": {},
                "title": "get_guarding_capabilitiesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_guarding_capabilitiesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "media-audio-server": [
        {
            "name": "transcribe_audio",
            "title": null,
            "description": "\nTranscribe audio file to text using OpenAI Whisper.\n\n        This tool converts speech in audio files to text with high accuracy.\n        Supports multiple languages and provides various output formats including\n        timestamped segments for detailed analysis.\n",
            "inputSchema": {
                "properties": {
                    "file_path": {
                        "description": "Path to the audio file to transcribe",
                        "title": "File Path",
                        "type": "string"
                    },
                    "model_size": {
                        "default": "base",
                        "description": "Whisper model size: tiny (fastest), base (balanced), small, medium, large (most accurate)",
                        "enum": [
                            "tiny",
                            "base",
                            "small",
                            "medium",
                            "large"
                        ],
                        "title": "Model Size",
                        "type": "string"
                    },
                    "output_format": {
                        "default": "text",
                        "description": "Output format: 'text' (plain text), 'detailed' (with metadata), 'segments' (timestamped)",
                        "enum": [
                            "text",
                            "detailed",
                            "segments"
                        ],
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "file_path"
                ],
                "title": "transcribe_audioArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "transcribe_audioOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "extract_audio_metadata",
            "title": null,
            "description": "\nExtract comprehensive metadata from audio files.\n\n        This tool analyzes audio files and extracts detailed metadata including\n        duration, sample rate, channels, bitrate, codec, and other technical information.\n",
            "inputSchema": {
                "properties": {
                    "file_path": {
                        "description": "Path to the audio file to analyze",
                        "title": "File Path",
                        "type": "string"
                    }
                },
                "required": [
                    "file_path"
                ],
                "title": "extract_audio_metadataArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "extract_audio_metadataOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "trim_audio",
            "title": null,
            "description": "\nTrim audio file to specified time range.\n\n        This tool cuts audio files to extract specific segments based on start time\n        and duration. Useful for creating clips or removing unwanted sections.\n",
            "inputSchema": {
                "properties": {
                    "file_path": {
                        "description": "Path to the audio file to trim",
                        "title": "File Path",
                        "type": "string"
                    },
                    "start_time": {
                        "description": "Start time in seconds",
                        "title": "Start Time",
                        "type": "number"
                    },
                    "duration": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "Duration in seconds (if None, trim to end)",
                        "title": "Duration"
                    }
                },
                "required": [
                    "file_path",
                    "start_time"
                ],
                "title": "trim_audioArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "trim_audioOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "list_supported_formats",
            "title": null,
            "description": "\nList all supported audio formats for processing.\n",
            "inputSchema": {
                "properties": {},
                "title": "list_supported_formatsArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "list_supported_formatsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "media-image-server": [
        {
            "name": "extract_text_ocr",
            "title": null,
            "description": "\nExtract text from images using Optical Character Recognition (OCR).\n\n        This tool uses Tesseract OCR to extract text content from images,\n        with optional preprocessing to improve recognition accuracy.\n",
            "inputSchema": {
                "properties": {
                    "file_path": {
                        "description": "Path to the image file for OCR",
                        "title": "File Path",
                        "type": "string"
                    },
                    "language": {
                        "default": "eng",
                        "description": "OCR language code (e.g., 'eng', 'spa', 'fra')",
                        "title": "Language",
                        "type": "string"
                    },
                    "preprocess": {
                        "default": true,
                        "description": "Whether to preprocess image for better OCR",
                        "title": "Preprocess",
                        "type": "boolean"
                    }
                },
                "required": [
                    "file_path"
                ],
                "title": "extract_text_ocrArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "extract_text_ocrOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "analyze_image_ai",
            "title": null,
            "description": "\nAnalyze image content using AI vision models.\n\n        This tool uses advanced AI models to analyze and describe image content,\n        answer questions about images, or perform specific visual reasoning tasks.\n",
            "inputSchema": {
                "properties": {
                    "file_path": {
                        "description": "Path to the image file for AI analysis",
                        "title": "File Path",
                        "type": "string"
                    },
                    "task": {
                        "default": "Describe what you see in this image",
                        "description": "Specific analysis task or question about the image",
                        "title": "Task",
                        "type": "string"
                    }
                },
                "required": [
                    "file_path"
                ],
                "title": "analyze_image_aiArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "analyze_image_aiOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_image_metadata",
            "title": null,
            "description": "\nExtract comprehensive metadata from image files.\n\n        This tool analyzes image files and extracts detailed metadata including\n        dimensions, format, color mode, file size, and other technical information.\n",
            "inputSchema": {
                "properties": {
                    "file_path": {
                        "description": "Path to the image file to analyze",
                        "title": "File Path",
                        "type": "string"
                    }
                },
                "required": [
                    "file_path"
                ],
                "title": "get_image_metadataArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_image_metadataOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "media-video-server": [
        {
            "name": "analyze_video",
            "title": null,
            "description": "\nAnalyze video content using AI with parallel processing.\n\n        This tool provides comprehensive video analysis capabilities including:\n        - Content understanding and description\n        - Object and scene detection\n        - Action and movement analysis\n        - Temporal event tracking\n        - Question-answering about video content\n        - Parallel processing for faster analysis\n",
            "inputSchema": {
                "properties": {
                    "video_url": {
                        "description": "Path or URL to the video file to analyze",
                        "title": "Video Url",
                        "type": "string"
                    },
                    "question": {
                        "description": "Question or task for video analysis",
                        "title": "Question",
                        "type": "string"
                    },
                    "sample_rate": {
                        "default": 1.0,
                        "description": "Frame sampling rate (frames per second)",
                        "title": "Sample Rate",
                        "type": "number"
                    },
                    "start_time": {
                        "default": 0.0,
                        "description": "Start time in seconds",
                        "title": "Start Time",
                        "type": "number"
                    },
                    "end_time": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "End time in seconds (None for full video)",
                        "title": "End Time"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    },
                    "max_workers": {
                        "default": 4,
                        "description": "Maximum number of parallel workers for analysis",
                        "title": "Max Workers",
                        "type": "integer"
                    }
                },
                "required": [
                    "video_url",
                    "question"
                ],
                "title": "analyze_videoArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "analyze_videoOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "summarize_video",
            "title": null,
            "description": "\nSummarize the main content of a video using AI analysis.\n\n        This tool provides AI-powered video summarization with:\n        - Key point extraction\n        - Main topic identification\n        - Important visual element recognition\n        - LLM-optimized result formatting\n",
            "inputSchema": {
                "properties": {
                    "video_url": {
                        "description": "The input video filepath or URL to summarize.",
                        "title": "Video Url",
                        "type": "string"
                    },
                    "sample_rate": {
                        "default": 1,
                        "description": "Sample n frames per second (default: 1).",
                        "title": "Sample Rate",
                        "type": "integer"
                    },
                    "start_time": {
                        "default": 0,
                        "description": "Start time of the video segment in seconds (default: 0).",
                        "title": "Start Time",
                        "type": "number"
                    },
                    "end_time": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "End time of the video segment in seconds (default: None).",
                        "title": "End Time"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text' (default: markdown).",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "video_url"
                ],
                "title": "summarize_videoArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "summarize_videoOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "extract_keyframes",
            "title": null,
            "description": "\nExtract key frames around a target time with scene detection.\n\n        This tool provides keyframe extraction with:\n        - Scene detection for significant frame changes\n        - Configurable time windows\n        - Automatic output directory management\n        - LLM-optimized result formatting\n",
            "inputSchema": {
                "properties": {
                    "video_path": {
                        "description": "The input video filepath or URL.",
                        "title": "Video Path",
                        "type": "string"
                    },
                    "target_time": {
                        "description": "The specific time point for extraction (in seconds), centered within the window_size.",
                        "title": "Target Time",
                        "type": "integer"
                    },
                    "window_size": {
                        "default": 5,
                        "description": "The window size for extraction (in seconds, default: 5).",
                        "title": "Window Size",
                        "type": "integer"
                    },
                    "output_dir": {
                        "default": null,
                        "description": "Directory where extracted frames will be saved (default: workspace/keyframes).",
                        "title": "Output Dir",
                        "type": "string"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text' (default: markdown).",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "video_path",
                    "target_time"
                ],
                "title": "extract_keyframesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "extract_keyframesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "parxiv-server": [
        {
            "name": "search_papers",
            "title": null,
            "description": "\nSearch ArXiv papers with flexible criteria.\n\n        This tool provides comprehensive ArXiv paper search with:\n        - Keyword, title, and author search capabilities\n        - Category filtering for specific subject areas\n        - Flexible sorting options (relevance, date)\n        - Configurable result limits\n        - LLM-optimized result formatting\n",
            "inputSchema": {
                "properties": {
                    "query": {
                        "description": "Search query (keywords, title, author, etc.)",
                        "title": "Query",
                        "type": "string"
                    },
                    "sort_by": {
                        "default": "relevance",
                        "description": "Sort by: 'relevance', 'lastUpdatedDate', 'submittedDate'",
                        "title": "Sort By",
                        "type": "string"
                    },
                    "sort_order": {
                        "default": "descending",
                        "description": "Sort order: 'ascending' or 'descending'",
                        "title": "Sort Order",
                        "type": "string"
                    },
                    "category": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "Filter by ArXiv category (e.g., 'cs.AI', 'math.CO')",
                        "title": "Category"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "query"
                ],
                "title": "search_papersArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "search_papersOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_paper_details",
            "title": null,
            "description": "\nGet detailed information about a specific ArXiv paper.\n",
            "inputSchema": {
                "properties": {
                    "paper_id": {
                        "description": "ArXiv paper ID (e.g., '2301.07041' or 'arxiv:2301.07041')",
                        "title": "Paper Id",
                        "type": "string"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "paper_id"
                ],
                "title": "get_paper_detailsArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_paper_detailsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "download_paper",
            "title": null,
            "description": "\nDownload ArXiv paper PDF and optionally extract text content.\n",
            "inputSchema": {
                "properties": {
                    "paper_id": {
                        "description": "ArXiv paper ID (e.g., '2301.07041' or 'arxiv:2301.07041')",
                        "title": "Paper Id",
                        "type": "string"
                    },
                    "extract_text": {
                        "default": true,
                        "description": "Whether to extract text content from PDF",
                        "title": "Extract Text",
                        "type": "boolean"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "paper_id"
                ],
                "title": "download_paperArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "download_paperOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_arxiv_capabilities",
            "title": null,
            "description": "\nGet information about ArXiv service capabilities and configuration.\n",
            "inputSchema": {
                "properties": {},
                "title": "get_arxiv_capabilitiesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_arxiv_capabilitiesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_categories",
            "title": null,
            "description": "\nGet available ArXiv subject categories.\n",
            "inputSchema": {
                "properties": {
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "title": "get_categoriesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_categoriesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "terminal-server": [
        {
            "name": "execute_command",
            "title": null,
            "description": "\nExecute a terminal command with safety checks and timeout controls.\n\n        This tool provides secure command execution with:\n        - Cross-platform compatibility (Windows, macOS, Linux)\n        - Configurable timeout controls\n        - Safety checks for dangerous commands\n        - LLM-optimized result formatting\n        - Command history tracking\n\n        Specialized Feature:\n        - Execute Python code and output the result to stdout\n            - Example (Directly execute simple Python code): `python -c \"nums = [1, 2, 3, 4]\nsum_of_nums = sum(nums)\nprint(f'{sum_of_nums=}')\"`\n            - Example (Execute code from a file): `python my_script.py`\n",
            "inputSchema": {
                "properties": {
                    "command": {
                        "description": "Terminal command to execute",
                        "title": "Command",
                        "type": "string"
                    },
                    "timeout": {
                        "default": 30,
                        "description": "Command timeout in seconds (default: 30)",
                        "title": "Timeout",
                        "type": "integer"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "command"
                ],
                "title": "execute_commandArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "execute_commandOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_command_history",
            "title": null,
            "description": "\nRetrieve recent command execution history.\n",
            "inputSchema": {
                "properties": {
                    "count": {
                        "default": 10,
                        "description": "Number of recent commands to return (default: 10)",
                        "title": "Count",
                        "type": "integer"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "title": "get_command_historyArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_command_historyOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_terminal_capabilities",
            "title": null,
            "description": "\nGet information about terminal service capabilities and configuration.\n",
            "inputSchema": {
                "properties": {},
                "title": "get_terminal_capabilitiesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_terminal_capabilitiesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "wayback-server": [
        {
            "name": "list_archived_versions",
            "title": null,
            "description": "\nList available archived versions of a URL from the Wayback Machine.\n\n        This function queries the Wayback Machine CDX API to retrieve all available\n        archived snapshots for a given URL, with optional date range filtering.\n",
            "inputSchema": {
                "properties": {
                    "url": {
                        "description": "The URL of the website to check for archived versions",
                        "title": "Url",
                        "type": "string"
                    },
                    "limit": {
                        "default": 10,
                        "description": "Maximum number of versions to return (0 for all)",
                        "title": "Limit",
                        "type": "integer"
                    },
                    "from_date": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "Start date filter (YYYYMMDDhhmmss)",
                        "title": "From Date"
                    },
                    "to_date": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "End date filter (YYYYMMDDhhmmss)",
                        "title": "To Date"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "url"
                ],
                "title": "list_archived_versionsArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "list_archived_versionsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_archived_content",
            "title": null,
            "description": "\nFetch content from a specific archived page version.\n\n        This function retrieves the content of a specific archived snapshot from the\n        Wayback Machine, with options for text extraction and content truncation.\n",
            "inputSchema": {
                "properties": {
                    "url": {
                        "description": "The URL of the website to fetch archived content from",
                        "title": "Url",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "The timestamp of the desired version (YYYYMMDDhhmmss)",
                        "title": "Timestamp",
                        "type": "string"
                    },
                    "extract_text_only": {
                        "default": true,
                        "description": "Extract only text content, removing HTML tags",
                        "title": "Extract Text Only",
                        "type": "boolean"
                    },
                    "truncate_content": {
                        "default": false,
                        "description": "Truncate content to manageable length for LLMs",
                        "title": "Truncate Content",
                        "type": "boolean"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "timestamp"
                ],
                "title": "get_archived_contentArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_archived_contentOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_wayback_capabilities",
            "title": null,
            "description": "\nGet Wayback Machine service capabilities and configuration.\n",
            "inputSchema": {
                "properties": {},
                "title": "get_wayback_capabilitiesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_wayback_capabilitiesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "wiki-server": [
        {
            "name": "search_wikipedia",
            "title": null,
            "description": "\nsearch Wikipedia for articles matching the query.\n\n        This tool provides Wikipedia search capabilities with:\n        - Configurable result limits\n        - Multi-language support\n        - LLM-optimized result formatting\n        - Error handling\n",
            "inputSchema": {
                "properties": {
                    "query": {
                        "description": "The search query string",
                        "title": "Query",
                        "type": "string"
                    },
                    "limit": {
                        "default": 10,
                        "description": "Maximum number of results to return",
                        "title": "Limit",
                        "type": "integer"
                    },
                    "language": {
                        "default": "en",
                        "description": "Language code for Wikipedia (e.g., 'en', 'es', 'fr')",
                        "title": "Language",
                        "type": "string"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "query"
                ],
                "title": "search_wikipediaArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "search_wikipediaOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_article_content",
            "title": null,
            "description": "\nRetrieve the full content of a Wikipedia article.\n\n        This tool provides Wikipedia article retrieval with:\n        - Auto-suggestion support\n        - Redirect handling\n        - Multi-language support\n        - LLM-optimized result formatting\n        - Error handling\n",
            "inputSchema": {
                "properties": {
                    "title": {
                        "description": "Title of the Wikipedia article",
                        "title": "Title",
                        "type": "string"
                    },
                    "auto_suggest": {
                        "default": false,
                        "description": "Whether to use Wikipedia's auto-suggest feature",
                        "title": "Auto Suggest",
                        "type": "boolean"
                    },
                    "redirect": {
                        "default": true,
                        "description": "Whether to follow redirects",
                        "title": "Redirect",
                        "type": "boolean"
                    },
                    "language": {
                        "default": "en",
                        "description": "Language code for Wikipedia (e.g., 'en', 'es', 'fr')",
                        "title": "Language",
                        "type": "string"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    },
                    "include_full_content": {
                        "default": true,
                        "description": "Whether to include the full article content",
                        "title": "Include Full Content",
                        "type": "boolean"
                    }
                },
                "required": [
                    "title"
                ],
                "title": "get_article_contentArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_article_contentOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_article_summary",
            "title": null,
            "description": "\nGet a summary of a Wikipedia article.\n\n        This tool provides Wikipedia article summary retrieval with:\n        - Configurable summary length\n        - Auto-suggestion support\n        - Redirect handling\n        - Multi-language support\n        - LLM-optimized result formatting\n        - Error handling\n",
            "inputSchema": {
                "properties": {
                    "title": {
                        "description": "Title of the Wikipedia article",
                        "title": "Title",
                        "type": "string"
                    },
                    "sentences": {
                        "default": 5,
                        "description": "Number of sentences to return in the summary",
                        "title": "Sentences",
                        "type": "integer"
                    },
                    "auto_suggest": {
                        "default": false,
                        "description": "Whether to use Wikipedia's auto-suggest feature",
                        "title": "Auto Suggest",
                        "type": "boolean"
                    },
                    "redirect": {
                        "default": true,
                        "description": "Whether to follow redirects",
                        "title": "Redirect",
                        "type": "boolean"
                    },
                    "language": {
                        "default": "en",
                        "description": "Language code for Wikipedia (e.g., 'en', 'es', 'fr')",
                        "title": "Language",
                        "type": "string"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "title"
                ],
                "title": "get_article_summaryArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_article_summaryOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_article_categories",
            "title": null,
            "description": "\nGet categories for a Wikipedia article.\n\n        This tool provides Wikipedia article category retrieval with:\n        - Multi-language support\n        - LLM-optimized result formatting\n        - Error handling\n",
            "inputSchema": {
                "properties": {
                    "title": {
                        "description": "Title of the Wikipedia article",
                        "title": "Title",
                        "type": "string"
                    },
                    "language": {
                        "default": "en",
                        "description": "Language code for Wikipedia (e.g., 'en', 'es', 'fr')",
                        "title": "Language",
                        "type": "string"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "title"
                ],
                "title": "get_article_categoriesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_article_categoriesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_article_links",
            "title": null,
            "description": "\nGet links from a Wikipedia article.\n\n        This tool provides Wikipedia article link retrieval with:\n        - Multi-language support\n        - LLM-optimized result formatting\n        - Error handling\n",
            "inputSchema": {
                "properties": {
                    "title": {
                        "description": "Title of the Wikipedia article",
                        "title": "Title",
                        "type": "string"
                    },
                    "language": {
                        "default": "en",
                        "description": "Language code for Wikipedia (e.g., 'en', 'es', 'fr')",
                        "title": "Language",
                        "type": "string"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "title"
                ],
                "title": "get_article_linksArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_article_linksOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_article_history",
            "title": null,
            "description": "\nGet historical version of a Wikipedia page closest to the specified date.\n\n        This tool provides historical Wikipedia article retrieval with:\n        - Date-based version lookup\n        - Auto-suggestion support\n        - Multi-language support\n        - LLM-optimized result formatting\n        - Error handling\n\n        If exact date version is not available, returns the closest version before that date.\n        Supports auto-suggestion and redirects to handle company name changes or variations.\n",
            "inputSchema": {
                "properties": {
                    "title": {
                        "description": "Title of the Wikipedia article",
                        "title": "Title",
                        "type": "string"
                    },
                    "date": {
                        "description": "Target date in YYYY/MM/DD format. If day is omitted, last day of month will be used",
                        "title": "Date",
                        "type": "string"
                    },
                    "language": {
                        "default": "en",
                        "description": "Language code for Wikipedia (e.g., 'en', 'es', 'fr')",
                        "title": "Language",
                        "type": "string"
                    },
                    "auto_suggest": {
                        "default": false,
                        "description": "Whether to use Wikipedia's auto-suggest feature and handle redirects",
                        "title": "Auto Suggest",
                        "type": "boolean"
                    },
                    "output_format": {
                        "default": "markdown",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "date"
                ],
                "title": "get_article_historyArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_article_historyOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_wikipedia_capabilities",
            "title": null,
            "description": "\nGet information about Wikipedia service capabilities and configuration.\n",
            "inputSchema": {
                "properties": {},
                "title": "get_wikipedia_capabilitiesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_wikipedia_capabilitiesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "googlesearch-server": [
        {
            "name": "search_google",
            "title": null,
            "description": "\nSearch the web using Google Custom Search API.\n\n        This tool provides comprehensive web search capabilities with:\n        - Google Custom Search API integration\n        - Configurable result count and filtering\n        - Safe search and localization options\n        - LLM-optimized result formatting\n        - Detailed metadata tracking\n",
            "inputSchema": {
                "properties": {
                    "query": {
                        "description": "The search query string to search for",
                        "title": "Query",
                        "type": "string"
                    },
                    "num_results": {
                        "default": 5,
                        "description": "Number of search results to return (1-10, default: 5)",
                        "title": "Num Results",
                        "type": "integer"
                    },
                    "safe_search": {
                        "default": true,
                        "description": "Whether to enable safe search filtering",
                        "title": "Safe Search",
                        "type": "boolean"
                    },
                    "language": {
                        "default": "en",
                        "description": "Language code for search results (e.g., 'en', 'es', 'fr')",
                        "title": "Language",
                        "type": "string"
                    },
                    "country": {
                        "default": "us",
                        "description": "Country code for search results (e.g., 'us', 'uk', 'ca')",
                        "title": "Country",
                        "type": "string"
                    },
                    "output_format": {
                        "default": "json",
                        "description": "Output format: 'markdown', 'json', or 'text'",
                        "title": "Output Format",
                        "type": "string"
                    }
                },
                "required": [
                    "query"
                ],
                "title": "search_googleArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "search_googleOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_search_capabilities",
            "title": null,
            "description": "\nGet information about search service capabilities and configuration.\n",
            "inputSchema": {
                "properties": {},
                "title": "get_search_capabilitiesArguments",
                "type": "object"
            },
            "outputSchema": {
                "$defs": {
                    "Annotations": {
                        "additionalProperties": true,
                        "properties": {
                            "audience": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "enum": [
                                                "user",
                                                "assistant"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Audience"
                            },
                            "priority": {
                                "anyOf": [
                                    {
                                        "maximum": 1.0,
                                        "minimum": 0.0,
                                        "type": "number"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Priority"
                            }
                        },
                        "title": "Annotations",
                        "type": "object"
                    },
                    "TextContent": {
                        "additionalProperties": true,
                        "description": "Text content for a message.",
                        "properties": {
                            "type": {
                                "const": "text",
                                "title": "Type",
                                "type": "string"
                            },
                            "text": {
                                "title": "Text",
                                "type": "string"
                            },
                            "annotations": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Annotations"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null
                            },
                            "_meta": {
                                "anyOf": [
                                    {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "Meta"
                            }
                        },
                        "required": [
                            "type",
                            "text"
                        ],
                        "title": "TextContent",
                        "type": "object"
                    }
                },
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/$defs/TextContent"
                            }
                        ],
                        "title": "Result"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_search_capabilitiesOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "filesystem-server": [
        {
            "name": "read_file",
            "title": null,
            "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "tail": {
                        "type": "number",
                        "description": "If provided, returns only the last N lines of the file"
                    },
                    "head": {
                        "type": "number",
                        "description": "If provided, returns only the first N lines of the file"
                    }
                },
                "required": [
                    "path"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "read_text_file",
            "title": null,
            "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "tail": {
                        "type": "number",
                        "description": "If provided, returns only the last N lines of the file"
                    },
                    "head": {
                        "type": "number",
                        "description": "If provided, returns only the first N lines of the file"
                    }
                },
                "required": [
                    "path"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "read_media_file",
            "title": null,
            "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    }
                },
                "required": [
                    "path"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "read_multiple_files",
            "title": null,
            "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "paths"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "write_file",
            "title": null,
            "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    }
                },
                "required": [
                    "path",
                    "content"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "edit_file",
            "title": null,
            "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "edits": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "oldText": {
                                    "type": "string",
                                    "description": "Text to search for - must match exactly"
                                },
                                "newText": {
                                    "type": "string",
                                    "description": "Text to replace with"
                                }
                            },
                            "required": [
                                "oldText",
                                "newText"
                            ],
                            "additionalProperties": false
                        }
                    },
                    "dryRun": {
                        "type": "boolean",
                        "default": false,
                        "description": "Preview changes using git-style diff format"
                    }
                },
                "required": [
                    "path",
                    "edits"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "create_directory",
            "title": null,
            "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    }
                },
                "required": [
                    "path"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "list_directory",
            "title": null,
            "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    }
                },
                "required": [
                    "path"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "list_directory_with_sizes",
            "title": null,
            "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "sortBy": {
                        "type": "string",
                        "enum": [
                            "name",
                            "size"
                        ],
                        "default": "name",
                        "description": "Sort entries by name or size"
                    }
                },
                "required": [
                    "path"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "directory_tree",
            "title": null,
            "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    }
                },
                "required": [
                    "path"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "move_file",
            "title": null,
            "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "source": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    }
                },
                "required": [
                    "source",
                    "destination"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "search_files",
            "title": null,
            "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "pattern": {
                        "type": "string"
                    },
                    "excludePatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    }
                },
                "required": [
                    "path",
                    "pattern"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_file_info",
            "title": null,
            "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    }
                },
                "required": [
                    "path"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        },
        {
            "name": "list_allowed_directories",
            "title": null,
            "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.",
            "inputSchema": {
                "type": "object",
                "properties": {},
                "required": []
            },
            "outputSchema": null,
            "annotations": null,
            "meta": null
        }
    ],
    "terminal-controller": [
        {
            "name": "execute_command",
            "title": null,
            "description": "\nExecute terminal command and return results\n\nArgs:\n    command: Command line command to execute\n    timeout: Command timeout in seconds, default is 30 seconds\n\nReturns:\n    Output of the command execution\n",
            "inputSchema": {
                "properties": {
                    "command": {
                        "title": "Command",
                        "type": "string"
                    },
                    "timeout": {
                        "default": 30,
                        "title": "Timeout",
                        "type": "integer"
                    }
                },
                "required": [
                    "command"
                ],
                "title": "execute_commandArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "execute_commandOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_command_history",
            "title": null,
            "description": "\nGet recent command execution history\n\nArgs:\n    count: Number of recent commands to return\n\nReturns:\n    Formatted command history record\n",
            "inputSchema": {
                "properties": {
                    "count": {
                        "default": 10,
                        "title": "Count",
                        "type": "integer"
                    }
                },
                "title": "get_command_historyArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_command_historyOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_current_directory",
            "title": null,
            "description": "\nGet current working directory\n\nReturns:\n    Path of current working directory\n",
            "inputSchema": {
                "properties": {},
                "title": "get_current_directoryArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_current_directoryOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "change_directory",
            "title": null,
            "description": "\nChange current working directory\n\nArgs:\n    path: Directory path to switch to\n\nReturns:\n    Operation result information\n",
            "inputSchema": {
                "properties": {
                    "path": {
                        "title": "Path",
                        "type": "string"
                    }
                },
                "required": [
                    "path"
                ],
                "title": "change_directoryArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "change_directoryOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "list_directory",
            "title": null,
            "description": "\nList files and subdirectories in the specified directory\n\nArgs:\n    path: Directory path to list contents, default is current directory\n\nReturns:\n    List of directory contents\n",
            "inputSchema": {
                "properties": {
                    "path": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Path"
                    }
                },
                "title": "list_directoryArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "list_directoryOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "write_file",
            "title": null,
            "description": "\nWrite content to a file\n\nArgs:\n    path: Path to the file\n    content: Content to write (string or JSON object)\n    mode: Write mode ('overwrite' or 'append')\n\nReturns:\n    Operation result information\n",
            "inputSchema": {
                "properties": {
                    "path": {
                        "title": "Path",
                        "type": "string"
                    },
                    "content": {
                        "title": "Content",
                        "type": "string"
                    },
                    "mode": {
                        "default": "overwrite",
                        "title": "Mode",
                        "type": "string"
                    }
                },
                "required": [
                    "path",
                    "content"
                ],
                "title": "write_fileArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "write_fileOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "read_file",
            "title": null,
            "description": "\nRead content from a file with optional row selection\n\nArgs:\n    path: Path to the file\n    start_row: Starting row to read from (0-based, optional)\n    end_row: Ending row to read to (0-based, inclusive, optional)\n    as_json: If True, attempt to parse file content as JSON (optional)\n\nReturns:\n    File content or selected lines, optionally parsed as JSON\n",
            "inputSchema": {
                "properties": {
                    "path": {
                        "title": "Path",
                        "type": "string"
                    },
                    "start_row": {
                        "default": null,
                        "title": "Start Row",
                        "type": "integer"
                    },
                    "end_row": {
                        "default": null,
                        "title": "End Row",
                        "type": "integer"
                    },
                    "as_json": {
                        "default": false,
                        "title": "As Json",
                        "type": "boolean"
                    }
                },
                "required": [
                    "path"
                ],
                "title": "read_fileArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "read_fileOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "insert_file_content",
            "title": null,
            "description": "\nInsert content at specific row(s) in a file\n\nArgs:\n    path: Path to the file\n    content: Content to insert (string or JSON object)\n    row: Row number to insert at (0-based, optional)\n    rows: List of row numbers to insert at (0-based, optional)\n\nReturns:\n    Operation result information\n",
            "inputSchema": {
                "properties": {
                    "path": {
                        "title": "Path",
                        "type": "string"
                    },
                    "content": {
                        "title": "Content",
                        "type": "string"
                    },
                    "row": {
                        "default": null,
                        "title": "Row",
                        "type": "integer"
                    },
                    "rows": {
                        "default": null,
                        "items": {},
                        "title": "Rows",
                        "type": "array"
                    }
                },
                "required": [
                    "path",
                    "content"
                ],
                "title": "insert_file_contentArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "insert_file_contentOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "delete_file_content",
            "title": null,
            "description": "\nDelete content at specific row(s) from a file\n\nArgs:\n    path: Path to the file\n    row: Row number to delete (0-based, optional)\n    rows: List of row numbers to delete (0-based, optional)\n    substring: If provided, only delete this substring within the specified row(s), not the entire row (optional)\n\nReturns:\n    Operation result information\n",
            "inputSchema": {
                "properties": {
                    "path": {
                        "title": "Path",
                        "type": "string"
                    },
                    "row": {
                        "default": null,
                        "title": "Row",
                        "type": "integer"
                    },
                    "rows": {
                        "default": null,
                        "items": {},
                        "title": "Rows",
                        "type": "array"
                    },
                    "substring": {
                        "default": null,
                        "title": "Substring",
                        "type": "string"
                    }
                },
                "required": [
                    "path"
                ],
                "title": "delete_file_contentArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "delete_file_contentOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "update_file_content",
            "title": null,
            "description": "\nUpdate content at specific row(s) in a file\n\nArgs:\n    path: Path to the file\n    content: New content to place at the specified row(s)\n    row: Row number to update (0-based, optional)\n    rows: List of row numbers to update (0-based, optional)\n    substring: If provided, only replace this substring within the specified row(s), not the entire row\n\nReturns:\n    Operation result information\n",
            "inputSchema": {
                "properties": {
                    "path": {
                        "title": "Path",
                        "type": "string"
                    },
                    "content": {
                        "title": "Content",
                        "type": "string"
                    },
                    "row": {
                        "default": null,
                        "title": "Row",
                        "type": "integer"
                    },
                    "rows": {
                        "default": null,
                        "items": {},
                        "title": "Rows",
                        "type": "array"
                    },
                    "substring": {
                        "default": null,
                        "title": "Substring",
                        "type": "string"
                    }
                },
                "required": [
                    "path",
                    "content"
                ],
                "title": "update_file_contentArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "update_file_contentOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "excel": [
        {
            "name": "apply_formula",
            "title": null,
            "description": "\nApply Excel formula to cell.\nExcel formula will write to cell with verification.\n",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "cell": {
                        "title": "Cell",
                        "type": "string"
                    },
                    "formula": {
                        "title": "Formula",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "cell",
                    "formula"
                ],
                "title": "apply_formulaArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "apply_formulaOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "validate_formula_syntax",
            "title": null,
            "description": "Validate Excel formula syntax without applying it.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "cell": {
                        "title": "Cell",
                        "type": "string"
                    },
                    "formula": {
                        "title": "Formula",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "cell",
                    "formula"
                ],
                "title": "validate_formula_syntaxArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "validate_formula_syntaxOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "format_range",
            "title": null,
            "description": "Apply formatting to a range of cells.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "start_cell": {
                        "title": "Start Cell",
                        "type": "string"
                    },
                    "end_cell": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "End Cell"
                    },
                    "bold": {
                        "default": false,
                        "title": "Bold",
                        "type": "boolean"
                    },
                    "italic": {
                        "default": false,
                        "title": "Italic",
                        "type": "boolean"
                    },
                    "underline": {
                        "default": false,
                        "title": "Underline",
                        "type": "boolean"
                    },
                    "font_size": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Font Size"
                    },
                    "font_color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Font Color"
                    },
                    "bg_color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Bg Color"
                    },
                    "border_style": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Border Style"
                    },
                    "border_color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Border Color"
                    },
                    "number_format": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Number Format"
                    },
                    "alignment": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Alignment"
                    },
                    "wrap_text": {
                        "default": false,
                        "title": "Wrap Text",
                        "type": "boolean"
                    },
                    "merge_cells": {
                        "default": false,
                        "title": "Merge Cells",
                        "type": "boolean"
                    },
                    "protection": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Protection"
                    },
                    "conditional_format": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Conditional Format"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "start_cell"
                ],
                "title": "format_rangeArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "format_rangeOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "read_data_from_excel",
            "title": null,
            "description": "\nRead data from Excel worksheet with cell metadata including validation rules.\n\nArgs:\n    filepath: Path to Excel file\n    sheet_name: Name of worksheet\n    start_cell: Starting cell (default A1)\n    end_cell: Ending cell (optional, auto-expands if not provided)\n    preview_only: Whether to return preview only\n\nReturns:  \nJSON string containing structured cell data with validation metadata.\nEach cell includes: address, value, row, column, and validation info (if any).\n",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "start_cell": {
                        "default": "A1",
                        "title": "Start Cell",
                        "type": "string"
                    },
                    "end_cell": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "End Cell"
                    },
                    "preview_only": {
                        "default": false,
                        "title": "Preview Only",
                        "type": "boolean"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name"
                ],
                "title": "read_data_from_excelArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "read_data_from_excelOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "write_data_to_excel",
            "title": null,
            "description": "\nWrite data to Excel worksheet.\nExcel formula will write to cell without any verification.\n\nPARAMETERS:  \nfilepath: Path to Excel file\nsheet_name: Name of worksheet to write to\ndata: List of lists containing data to write to the worksheet, sublists are assumed to be rows\nstart_cell: Cell to start writing to, default is \"A1\"\n\n",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "data": {
                        "items": {
                            "items": {},
                            "type": "array"
                        },
                        "title": "Data",
                        "type": "array"
                    },
                    "start_cell": {
                        "default": "A1",
                        "title": "Start Cell",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "data"
                ],
                "title": "write_data_to_excelArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "write_data_to_excelOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "create_workbook",
            "title": null,
            "description": "Create new Excel workbook.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath"
                ],
                "title": "create_workbookArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "create_workbookOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "create_worksheet",
            "title": null,
            "description": "Create new worksheet in workbook.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name"
                ],
                "title": "create_worksheetArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "create_worksheetOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "create_chart",
            "title": null,
            "description": "Create chart in worksheet.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "data_range": {
                        "title": "Data Range",
                        "type": "string"
                    },
                    "chart_type": {
                        "title": "Chart Type",
                        "type": "string"
                    },
                    "target_cell": {
                        "title": "Target Cell",
                        "type": "string"
                    },
                    "title": {
                        "default": "",
                        "title": "Title",
                        "type": "string"
                    },
                    "x_axis": {
                        "default": "",
                        "title": "X Axis",
                        "type": "string"
                    },
                    "y_axis": {
                        "default": "",
                        "title": "Y Axis",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "data_range",
                    "chart_type",
                    "target_cell"
                ],
                "title": "create_chartArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "create_chartOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "create_pivot_table",
            "title": null,
            "description": "Create pivot table in worksheet.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "data_range": {
                        "title": "Data Range",
                        "type": "string"
                    },
                    "rows": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Rows",
                        "type": "array"
                    },
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Values",
                        "type": "array"
                    },
                    "columns": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Columns"
                    },
                    "agg_func": {
                        "default": "mean",
                        "title": "Agg Func",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "data_range",
                    "rows",
                    "values"
                ],
                "title": "create_pivot_tableArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "create_pivot_tableOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "create_table",
            "title": null,
            "description": "Creates a native Excel table from a specified range of data.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "data_range": {
                        "title": "Data Range",
                        "type": "string"
                    },
                    "table_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Table Name"
                    },
                    "table_style": {
                        "default": "TableStyleMedium9",
                        "title": "Table Style",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "data_range"
                ],
                "title": "create_tableArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "create_tableOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "copy_worksheet",
            "title": null,
            "description": "Copy worksheet within workbook.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "source_sheet": {
                        "title": "Source Sheet",
                        "type": "string"
                    },
                    "target_sheet": {
                        "title": "Target Sheet",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "source_sheet",
                    "target_sheet"
                ],
                "title": "copy_worksheetArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "copy_worksheetOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "delete_worksheet",
            "title": null,
            "description": "Delete worksheet from workbook.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name"
                ],
                "title": "delete_worksheetArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "delete_worksheetOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "rename_worksheet",
            "title": null,
            "description": "Rename worksheet in workbook.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "old_name": {
                        "title": "Old Name",
                        "type": "string"
                    },
                    "new_name": {
                        "title": "New Name",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "old_name",
                    "new_name"
                ],
                "title": "rename_worksheetArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "rename_worksheetOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_workbook_metadata",
            "title": null,
            "description": "Get metadata about workbook including sheets, ranges, etc.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "include_ranges": {
                        "default": false,
                        "title": "Include Ranges",
                        "type": "boolean"
                    }
                },
                "required": [
                    "filepath"
                ],
                "title": "get_workbook_metadataArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_workbook_metadataOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "merge_cells",
            "title": null,
            "description": "Merge a range of cells.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "start_cell": {
                        "title": "Start Cell",
                        "type": "string"
                    },
                    "end_cell": {
                        "title": "End Cell",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "start_cell",
                    "end_cell"
                ],
                "title": "merge_cellsArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "merge_cellsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "unmerge_cells",
            "title": null,
            "description": "Unmerge a range of cells.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "start_cell": {
                        "title": "Start Cell",
                        "type": "string"
                    },
                    "end_cell": {
                        "title": "End Cell",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "start_cell",
                    "end_cell"
                ],
                "title": "unmerge_cellsArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "unmerge_cellsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_merged_cells",
            "title": null,
            "description": "Get merged cells in a worksheet.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name"
                ],
                "title": "get_merged_cellsArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_merged_cellsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "copy_range",
            "title": null,
            "description": "Copy a range of cells to another location.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "source_start": {
                        "title": "Source Start",
                        "type": "string"
                    },
                    "source_end": {
                        "title": "Source End",
                        "type": "string"
                    },
                    "target_start": {
                        "title": "Target Start",
                        "type": "string"
                    },
                    "target_sheet": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "Target Sheet"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "source_start",
                    "source_end",
                    "target_start"
                ],
                "title": "copy_rangeArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "copy_rangeOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "delete_range",
            "title": null,
            "description": "Delete a range of cells and shift remaining cells.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "start_cell": {
                        "title": "Start Cell",
                        "type": "string"
                    },
                    "end_cell": {
                        "title": "End Cell",
                        "type": "string"
                    },
                    "shift_direction": {
                        "default": "up",
                        "title": "Shift Direction",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "start_cell",
                    "end_cell"
                ],
                "title": "delete_rangeArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "delete_rangeOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "validate_excel_range",
            "title": null,
            "description": "Validate if a range exists and is properly formatted.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "start_cell": {
                        "title": "Start Cell",
                        "type": "string"
                    },
                    "end_cell": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "title": "End Cell"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "start_cell"
                ],
                "title": "validate_excel_rangeArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "validate_excel_rangeOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "get_data_validation_info",
            "title": null,
            "description": "\nGet all data validation rules in a worksheet.\n\nThis tool helps identify which cell ranges have validation rules\nand what types of validation are applied.\n\nArgs:\n    filepath: Path to Excel file\n    sheet_name: Name of worksheet\n    \nReturns:\n    JSON string containing all validation rules in the worksheet\n",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name"
                ],
                "title": "get_data_validation_infoArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "get_data_validation_infoOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "insert_rows",
            "title": null,
            "description": "Insert one or more rows starting at the specified row.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "start_row": {
                        "title": "Start Row",
                        "type": "integer"
                    },
                    "count": {
                        "default": 1,
                        "title": "Count",
                        "type": "integer"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "start_row"
                ],
                "title": "insert_rowsArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "insert_rowsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "insert_columns",
            "title": null,
            "description": "Insert one or more columns starting at the specified column.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "start_col": {
                        "title": "Start Col",
                        "type": "integer"
                    },
                    "count": {
                        "default": 1,
                        "title": "Count",
                        "type": "integer"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "start_col"
                ],
                "title": "insert_columnsArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "insert_columnsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "delete_sheet_rows",
            "title": null,
            "description": "Delete one or more rows starting at the specified row.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "start_row": {
                        "title": "Start Row",
                        "type": "integer"
                    },
                    "count": {
                        "default": 1,
                        "title": "Count",
                        "type": "integer"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "start_row"
                ],
                "title": "delete_sheet_rowsArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "delete_sheet_rowsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "delete_sheet_columns",
            "title": null,
            "description": "Delete one or more columns starting at the specified column.",
            "inputSchema": {
                "properties": {
                    "filepath": {
                        "title": "Filepath",
                        "type": "string"
                    },
                    "sheet_name": {
                        "title": "Sheet Name",
                        "type": "string"
                    },
                    "start_col": {
                        "title": "Start Col",
                        "type": "integer"
                    },
                    "count": {
                        "default": 1,
                        "title": "Count",
                        "type": "integer"
                    }
                },
                "required": [
                    "filepath",
                    "sheet_name",
                    "start_col"
                ],
                "title": "delete_sheet_columnsArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "delete_sheet_columnsOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "google-search": [],
    "audio-server": [
        {
            "name": "mcp_transcribe_audio",
            "title": null,
            "description": "Transcribe the given audio in a list of filepaths or urls.",
            "inputSchema": {
                "properties": {
                    "audio_urls": {
                        "description": "The input audio in given a list of filepaths or urls.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Audio Urls",
                        "type": "array"
                    }
                },
                "required": [
                    "audio_urls"
                ],
                "title": "mcp_transcribe_audioArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "mcp_transcribe_audioOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "image-server": [
        {
            "name": "mcp_image_recognition",
            "title": null,
            "description": "Solve the question by careful reasoning given the image(s) in given local filepath or url, including reasoning, ocr, etc.",
            "inputSchema": {
                "properties": {
                    "image_urls": {
                        "description": "The input image(s) in given a list of local filepaths or urls.",
                        "items": {
                            "type": "string"
                        },
                        "title": "Image Urls",
                        "type": "array"
                    },
                    "question": {
                        "description": "The question to ask.",
                        "title": "Question",
                        "type": "string"
                    }
                },
                "required": [
                    "image_urls",
                    "question"
                ],
                "title": "mcp_image_recognitionArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "mcp_image_recognitionOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "e2b-code-server": [
        {
            "name": "e2b_upload_file",
            "title": null,
            "description": "Upload local file to e2b sandbox.",
            "inputSchema": {
                "properties": {
                    "path": {
                        "description": "The local file path to upload.",
                        "title": "Path",
                        "type": "string"
                    }
                },
                "required": [
                    "path"
                ],
                "title": "e2b_upload_fileArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "e2b_upload_fileOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        },
        {
            "name": "e2b_run_code",
            "title": null,
            "description": "Run code in a specified e2b sandbox.",
            "inputSchema": {
                "properties": {
                    "sandbox_id": {
                        "default": null,
                        "description": "The sandbox id to run code in, if you have uploaded a file, you should use the sandbox_id returned by the e2b_upload_file function.",
                        "title": "Sandbox Id",
                        "type": "string"
                    },
                    "code_block": {
                        "default": null,
                        "description": "The code block to run in e2b sandbox.",
                        "title": "Code Block",
                        "type": "string"
                    }
                },
                "title": "e2b_run_codeArguments",
                "type": "object"
            },
            "outputSchema": {
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                },
                "required": [
                    "result"
                ],
                "title": "e2b_run_codeOutput",
                "type": "object"
            },
            "annotations": null,
            "meta": null
        }
    ],
    "ms-playwright": [
        {
            "name": "browser_close",
            "title": null,
            "description": "Close the page",
            "inputSchema": {
                "type": "object",
                "properties": {},
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Close browser",
                "readOnlyHint": true,
                "destructiveHint": false,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_resize",
            "title": null,
            "description": "Resize the browser window",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "width": {
                        "type": "number",
                        "description": "Width of the browser window"
                    },
                    "height": {
                        "type": "number",
                        "description": "Height of the browser window"
                    }
                },
                "required": [
                    "width",
                    "height"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Resize browser window",
                "readOnlyHint": true,
                "destructiveHint": false,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_console_messages",
            "title": null,
            "description": "Returns all console messages",
            "inputSchema": {
                "type": "object",
                "properties": {},
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Get console messages",
                "readOnlyHint": true,
                "destructiveHint": false,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_handle_dialog",
            "title": null,
            "description": "Handle a dialog",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "accept": {
                        "type": "boolean",
                        "description": "Whether to accept the dialog."
                    },
                    "promptText": {
                        "type": "string",
                        "description": "The text of the prompt in case of a prompt dialog."
                    }
                },
                "required": [
                    "accept"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Handle a dialog",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_evaluate",
            "title": null,
            "description": "Evaluate JavaScript expression on page or element",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "function": {
                        "type": "string",
                        "description": "() => { /* code */ } or (element) => { /* code */ } when element is provided"
                    },
                    "element": {
                        "type": "string",
                        "description": "Human-readable element description used to obtain permission to interact with the element"
                    },
                    "ref": {
                        "type": "string",
                        "description": "Exact target element reference from the page snapshot"
                    }
                },
                "required": [
                    "function"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Evaluate JavaScript",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_file_upload",
            "title": null,
            "description": "Upload one or multiple files",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The absolute paths to the files to upload. Can be a single file or multiple files."
                    }
                },
                "required": [
                    "paths"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Upload files",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_fill_form",
            "title": null,
            "description": "Fill multiple form fields",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Human-readable field name"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "textbox",
                                        "checkbox",
                                        "radio",
                                        "combobox",
                                        "slider"
                                    ],
                                    "description": "Type of the field"
                                },
                                "ref": {
                                    "type": "string",
                                    "description": "Exact target field reference from the page snapshot"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value to fill in the field. If the field is a checkbox, the value should be `true` or `false`. If the field is a combobox, the value should be the text of the option."
                                }
                            },
                            "required": [
                                "name",
                                "type",
                                "ref",
                                "value"
                            ],
                            "additionalProperties": false
                        },
                        "description": "Fields to fill in"
                    }
                },
                "required": [
                    "fields"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Fill form",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_install",
            "title": null,
            "description": "Install the browser specified in the config. Call this if you get an error about the browser not being installed.",
            "inputSchema": {
                "type": "object",
                "properties": {},
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Install the browser specified in the config",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_press_key",
            "title": null,
            "description": "Press a key on the keyboard",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`"
                    }
                },
                "required": [
                    "key"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Press a key",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_type",
            "title": null,
            "description": "Type text into editable element",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "element": {
                        "type": "string",
                        "description": "Human-readable element description used to obtain permission to interact with the element"
                    },
                    "ref": {
                        "type": "string",
                        "description": "Exact target element reference from the page snapshot"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text to type into the element"
                    },
                    "submit": {
                        "type": "boolean",
                        "description": "Whether to submit entered text (press Enter after)"
                    },
                    "slowly": {
                        "type": "boolean",
                        "description": "Whether to type one character at a time. Useful for triggering key handlers in the page. By default entire text is filled in at once."
                    }
                },
                "required": [
                    "element",
                    "ref",
                    "text"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Type text",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_navigate",
            "title": null,
            "description": "Navigate to a URL",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL to navigate to"
                    }
                },
                "required": [
                    "url"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Navigate to a URL",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_navigate_back",
            "title": null,
            "description": "Go back to the previous page",
            "inputSchema": {
                "type": "object",
                "properties": {},
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Go back",
                "readOnlyHint": true,
                "destructiveHint": false,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_network_requests",
            "title": null,
            "description": "Returns all network requests since loading the page",
            "inputSchema": {
                "type": "object",
                "properties": {},
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "List network requests",
                "readOnlyHint": true,
                "destructiveHint": false,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_take_screenshot",
            "title": null,
            "description": "Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "png",
                            "jpeg"
                        ],
                        "default": "png",
                        "description": "Image format for the screenshot. Default is png."
                    },
                    "filename": {
                        "type": "string",
                        "description": "File name to save the screenshot to. Defaults to `page-{timestamp}.{png|jpeg}` if not specified."
                    },
                    "element": {
                        "type": "string",
                        "description": "Human-readable element description used to obtain permission to screenshot the element. If not provided, the screenshot will be taken of viewport. If element is provided, ref must be provided too."
                    },
                    "ref": {
                        "type": "string",
                        "description": "Exact target element reference from the page snapshot. If not provided, the screenshot will be taken of viewport. If ref is provided, element must be provided too."
                    },
                    "fullPage": {
                        "type": "boolean",
                        "description": "When true, takes a screenshot of the full scrollable page, instead of the currently visible viewport. Cannot be used with element screenshots."
                    }
                },
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Take a screenshot",
                "readOnlyHint": true,
                "destructiveHint": false,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_snapshot",
            "title": null,
            "description": "Capture accessibility snapshot of the current page, this is better than screenshot",
            "inputSchema": {
                "type": "object",
                "properties": {},
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Page snapshot",
                "readOnlyHint": true,
                "destructiveHint": false,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_click",
            "title": null,
            "description": "Perform click on a web page",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "element": {
                        "type": "string",
                        "description": "Human-readable element description used to obtain permission to interact with the element"
                    },
                    "ref": {
                        "type": "string",
                        "description": "Exact target element reference from the page snapshot"
                    },
                    "doubleClick": {
                        "type": "boolean",
                        "description": "Whether to perform a double click instead of a single click"
                    },
                    "button": {
                        "type": "string",
                        "enum": [
                            "left",
                            "right",
                            "middle"
                        ],
                        "description": "Button to click, defaults to left"
                    }
                },
                "required": [
                    "element",
                    "ref"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Click",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_drag",
            "title": null,
            "description": "Perform drag and drop between two elements",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "startElement": {
                        "type": "string",
                        "description": "Human-readable source element description used to obtain the permission to interact with the element"
                    },
                    "startRef": {
                        "type": "string",
                        "description": "Exact source element reference from the page snapshot"
                    },
                    "endElement": {
                        "type": "string",
                        "description": "Human-readable target element description used to obtain the permission to interact with the element"
                    },
                    "endRef": {
                        "type": "string",
                        "description": "Exact target element reference from the page snapshot"
                    }
                },
                "required": [
                    "startElement",
                    "startRef",
                    "endElement",
                    "endRef"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Drag mouse",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_hover",
            "title": null,
            "description": "Hover over element on page",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "element": {
                        "type": "string",
                        "description": "Human-readable element description used to obtain permission to interact with the element"
                    },
                    "ref": {
                        "type": "string",
                        "description": "Exact target element reference from the page snapshot"
                    }
                },
                "required": [
                    "element",
                    "ref"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Hover mouse",
                "readOnlyHint": true,
                "destructiveHint": false,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_select_option",
            "title": null,
            "description": "Select an option in a dropdown",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "element": {
                        "type": "string",
                        "description": "Human-readable element description used to obtain permission to interact with the element"
                    },
                    "ref": {
                        "type": "string",
                        "description": "Exact target element reference from the page snapshot"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of values to select in the dropdown. This can be a single value or multiple values."
                    }
                },
                "required": [
                    "element",
                    "ref",
                    "values"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Select option",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_tabs",
            "title": null,
            "description": "List, create, close, or select a browser tab.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "enum": [
                            "list",
                            "new",
                            "close",
                            "select"
                        ],
                        "description": "Operation to perform"
                    },
                    "index": {
                        "type": "number",
                        "description": "Tab index, used for close/select. If omitted for close, current tab is closed."
                    }
                },
                "required": [
                    "action"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Manage tabs",
                "readOnlyHint": false,
                "destructiveHint": true,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        },
        {
            "name": "browser_wait_for",
            "title": null,
            "description": "Wait for text to appear or disappear or a specified time to pass",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "number",
                        "description": "The time to wait in seconds"
                    },
                    "text": {
                        "type": "string",
                        "description": "The text to wait for"
                    },
                    "textGone": {
                        "type": "string",
                        "description": "The text to wait for to disappear"
                    }
                },
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "outputSchema": null,
            "annotations": {
                "title": "Wait for",
                "readOnlyHint": true,
                "destructiveHint": false,
                "idempotentHint": null,
                "openWorldHint": true
            },
            "meta": null
        }
    ]
}